g++ -std=c++11 adaptingMyMatrixAndVectorClassesToProto.cpp -o adaptingMyMatrixAndVectorClassesToProto
In file included from /home/mito/usrLocal/include/boost/proto/detail/matches_.hpp:3:0,
                 from /home/mito/usrLocal/include/boost/proto/matches.hpp:346,
                 from /home/mito/usrLocal/include/boost/proto/core.hpp:22,
                 from /home/mito/usrLocal/include/boost/proto/proto.hpp:12,
                 from adaptingMyMatrixAndVectorClassesToProto.cpp:9:
/home/mito/usrLocal/include/boost/proto/detail/preprocessed/matches_.hpp: In instantiation of 'struct boost::proto::detail::matches_<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::multiplies, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<LinAlg::Matrix&>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<LinAlg::Vector&>, 0l> >, 2l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::multiplies, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<LinAlg::Matrix&>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<LinAlg::Vector&>, 0l> >, 2l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::multiplies, boost::proto::argsns_::list2<LinAlg::Matrix, LinAlg::Vector>, 2l> >':
/home/mito/usrLocal/include/boost/proto/detail/preprocessed/or_n.hpp:9:12:   required from 'struct boost::proto::detail::or_2<false, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::multiplies, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<LinAlg::Matrix&>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<LinAlg::Vector&>, 0l> >, 2l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::multiplies, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<LinAlg::Matrix&>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<LinAlg::Vector&>, 0l> >, 2l>, boost::proto::when<boost::proto::function<LinAlg::MatVecMultElmGrammar, boost::proto::_>, LinAlg::MatVecMultElmGrammar(boost::proto::_child_c<0>, boost::proto::_child_c<1>)>, boost::proto::multiplies<LinAlg::Matrix, LinAlg::Vector> >'
/home/mito/usrLocal/include/boost/proto/detail/preprocessed/matches_.hpp:10:16:   required from 'struct boost::proto::detail::matches_<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::multiplies, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<LinAlg::Matrix&>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<LinAlg::Vector&>, 0l> >, 2l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::multiplies, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<LinAlg::Matrix&>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<LinAlg::Vector&>, 0l> >, 2l>, boost::proto::or_<boost::proto::when<boost::proto::function<LinAlg::MatVecMultElmGrammar, boost::proto::_>, LinAlg::MatVecMultElmGrammar(boost::proto::_child_c<0>, boost::proto::_child_c<1>)>, boost::proto::multiplies<LinAlg::Matrix, LinAlg::Vector> > >'
/home/mito/usrLocal/include/boost/proto/matches.hpp:503:12:   required from 'struct boost::proto::matches<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::multiplies, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<LinAlg::Matrix&>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<LinAlg::Vector&>, 0l> >, 2l>, LinAlg::VecExprGrammar>'
/home/mito/usrLocal/include/boost/proto/operators.hpp:34:16:   required from 'struct boost::proto::detail::lazy_matches<boost::proto::result_of::make_expr<boost::proto::tagns_::tag::multiplies, boost::proto::domainns_::basic_default_domain, LinAlg::Matrix&, LinAlg::Vector&, void, void, void, void, void, void, void, void, void>, LinAlg::VecExprGrammar>'
/home/mito/usrLocal/include/boost/mpl/aux_/nested_type_wknd.hpp:26:31:   required from 'struct boost::mpl::aux::nested_type_wknd<boost::proto::detail::lazy_matches<boost::proto::result_of::make_expr<boost::proto::tagns_::tag::multiplies, boost::proto::domainns_::basic_default_domain, LinAlg::Matrix&, LinAlg::Vector&, void, void, void, void, void, void, void, void, void>, LinAlg::VecExprGrammar> >'
/home/mito/usrLocal/include/boost/mpl/aux_/preprocessed/gcc/and.hpp:23:8:   required from 'struct boost::mpl::aux::and_impl<true, boost::proto::detail::lazy_matches<boost::proto::result_of::make_expr<boost::proto::tagns_::tag::multiplies, boost::proto::domainns_::basic_default_domain, LinAlg::Matrix&, LinAlg::Vector&, void, void, void, void, void, void, void, void, void>, LinAlg::VecExprGrammar>, mpl_::bool_<true>, mpl_::bool_<true>, mpl_::bool_<true> >'
/home/mito/usrLocal/include/boost/mpl/aux_/preprocessed/gcc/and.hpp:48:8:   required from 'struct boost::mpl::and_<boost::mpl::and_<boost::mpl::or_<LinAlg::IsExpr<LinAlg::Matrix>, LinAlg::IsExpr<LinAlg::Vector>, mpl_::bool_<false>, mpl_::bool_<false>, mpl_::bool_<false> >, boost::mpl::not_<boost::mpl::or_<boost::proto::is_extension<LinAlg::Matrix&>, boost::proto::is_extension<LinAlg::Vector&>, mpl_::bool_<false>, mpl_::bool_<false>, mpl_::bool_<false> > >, mpl_::bool_<true>, mpl_::bool_<true>, mpl_::bool_<true> >, boost::proto::detail::lazy_matches<boost::proto::result_of::make_expr<boost::proto::tagns_::tag::multiplies, boost::proto::domainns_::basic_default_domain, LinAlg::Matrix&, LinAlg::Vector&, void, void, void, void, void, void, void, void, void>, LinAlg::VecExprGrammar>, mpl_::bool_<true>, mpl_::bool_<true>, mpl_::bool_<true> >'
/home/mito/usrLocal/include/boost/proto/operators.hpp:69:16:   required from 'struct boost::proto::detail::enable_binary<LinAlg::Domain, LinAlg::VecExprGrammar, boost::mpl::and_<boost::mpl::or_<LinAlg::IsExpr<LinAlg::Matrix>, LinAlg::IsExpr<LinAlg::Vector>, mpl_::bool_<false>, mpl_::bool_<false>, mpl_::bool_<false> >, boost::mpl::not_<boost::mpl::or_<boost::proto::is_extension<LinAlg::Matrix&>, boost::proto::is_extension<LinAlg::Vector&>, mpl_::bool_<false>, mpl_::bool_<false>, mpl_::bool_<false> > >, mpl_::bool_<true>, mpl_::bool_<true>, mpl_::bool_<true> >, boost::proto::tagns_::tag::multiplies, LinAlg::Matrix&, LinAlg::Vector&>'
adaptingMyMatrixAndVectorClassesToProto.cpp:188:2:   required by substitution of 'template<class Left, class Right> const typename boost::proto::detail::enable_binary<LinAlg::Domain, LinAlg::VecExprGrammar, boost::mpl::and_<boost::mpl::or_<LinAlg::IsExpr<typename boost::proto::detail::uncvref<T>::type>, LinAlg::IsExpr<typename boost::proto::detail::uncvref<Arg0>::type> >, boost::mpl::not_<boost::mpl::or_<boost::proto::is_extension<Arg>, boost::proto::is_extension<Right> > > >, boost::proto::tagns_::tag::multiplies, const Left&, const Right&>::type LinAlg::operator*(Left&&, Right&&) [with Left = LinAlg::Matrix&; Right = LinAlg::Vector&]'
adaptingMyMatrixAndVectorClassesToProto.cpp:213:34:   required from here
/home/mito/usrLocal/include/boost/proto/detail/preprocessed/matches_.hpp:25:16: error: no type named 'proto_grammar' in 'boost::proto::argsns_::list2<LinAlg::Matrix, LinAlg::Vector>::child0 {aka class LinAlg::Matrix}'
         struct matches_< Expr, proto::basic_expr<Tag, Args1, 2>, proto::basic_expr<Tag, Args2, 2> >
                ^
In file included from /home/mito/usrLocal/include/boost/proto/detail/or_n.hpp:3:0,
                 from /home/mito/usrLocal/include/boost/proto/matches.hpp:345,
                 from /home/mito/usrLocal/include/boost/proto/core.hpp:22,
                 from /home/mito/usrLocal/include/boost/proto/proto.hpp:12,
                 from adaptingMyMatrixAndVectorClassesToProto.cpp:9:
/home/mito/usrLocal/include/boost/proto/detail/preprocessed/or_n.hpp: In instantiation of 'struct boost::proto::detail::or_2<false, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::multiplies, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<LinAlg::Matrix&>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<LinAlg::Vector&>, 0l> >, 2l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::multiplies, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<LinAlg::Matrix&>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<LinAlg::Vector&>, 0l> >, 2l>, boost::proto::when<boost::proto::function<LinAlg::MatVecMultElmGrammar, boost::proto::_>, LinAlg::MatVecMultElmGrammar(boost::proto::_child_c<0>, boost::proto::_child_c<1>)>, boost::proto::multiplies<LinAlg::Matrix, LinAlg::Vector> >':
/home/mito/usrLocal/include/boost/proto/detail/preprocessed/matches_.hpp:10:16:   required from 'struct boost::proto::detail::matches_<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::multiplies, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<LinAlg::Matrix&>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<LinAlg::Vector&>, 0l> >, 2l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::multiplies, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<LinAlg::Matrix&>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<LinAlg::Vector&>, 0l> >, 2l>, boost::proto::or_<boost::proto::when<boost::proto::function<LinAlg::MatVecMultElmGrammar, boost::proto::_>, LinAlg::MatVecMultElmGrammar(boost::proto::_child_c<0>, boost::proto::_child_c<1>)>, boost::proto::multiplies<LinAlg::Matrix, LinAlg::Vector> > >'
/home/mito/usrLocal/include/boost/proto/matches.hpp:503:12:   required from 'struct boost::proto::matches<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::multiplies, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<LinAlg::Matrix&>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<LinAlg::Vector&>, 0l> >, 2l>, LinAlg::VecExprGrammar>'
/home/mito/usrLocal/include/boost/proto/operators.hpp:34:16:   required from 'struct boost::proto::detail::lazy_matches<boost::proto::result_of::make_expr<boost::proto::tagns_::tag::multiplies, boost::proto::domainns_::basic_default_domain, LinAlg::Matrix&, LinAlg::Vector&, void, void, void, void, void, void, void, void, void>, LinAlg::VecExprGrammar>'
/home/mito/usrLocal/include/boost/mpl/aux_/nested_type_wknd.hpp:26:31:   required from 'struct boost::mpl::aux::nested_type_wknd<boost::proto::detail::lazy_matches<boost::proto::result_of::make_expr<boost::proto::tagns_::tag::multiplies, boost::proto::domainns_::basic_default_domain, LinAlg::Matrix&, LinAlg::Vector&, void, void, void, void, void, void, void, void, void>, LinAlg::VecExprGrammar> >'
/home/mito/usrLocal/include/boost/mpl/aux_/preprocessed/gcc/and.hpp:23:8:   required from 'struct boost::mpl::aux::and_impl<true, boost::proto::detail::lazy_matches<boost::proto::result_of::make_expr<boost::proto::tagns_::tag::multiplies, boost::proto::domainns_::basic_default_domain, LinAlg::Matrix&, LinAlg::Vector&, void, void, void, void, void, void, void, void, void>, LinAlg::VecExprGrammar>, mpl_::bool_<true>, mpl_::bool_<true>, mpl_::bool_<true> >'
/home/mito/usrLocal/include/boost/mpl/aux_/preprocessed/gcc/and.hpp:48:8:   required from 'struct boost::mpl::and_<boost::mpl::and_<boost::mpl::or_<LinAlg::IsExpr<LinAlg::Matrix>, LinAlg::IsExpr<LinAlg::Vector>, mpl_::bool_<false>, mpl_::bool_<false>, mpl_::bool_<false> >, boost::mpl::not_<boost::mpl::or_<boost::proto::is_extension<LinAlg::Matrix&>, boost::proto::is_extension<LinAlg::Vector&>, mpl_::bool_<false>, mpl_::bool_<false>, mpl_::bool_<false> > >, mpl_::bool_<true>, mpl_::bool_<true>, mpl_::bool_<true> >, boost::proto::detail::lazy_matches<boost::proto::result_of::make_expr<boost::proto::tagns_::tag::multiplies, boost::proto::domainns_::basic_default_domain, LinAlg::Matrix&, LinAlg::Vector&, void, void, void, void, void, void, void, void, void>, LinAlg::VecExprGrammar>, mpl_::bool_<true>, mpl_::bool_<true>, mpl_::bool_<true> >'
/home/mito/usrLocal/include/boost/proto/operators.hpp:69:16:   required from 'struct boost::proto::detail::enable_binary<LinAlg::Domain, LinAlg::VecExprGrammar, boost::mpl::and_<boost::mpl::or_<LinAlg::IsExpr<LinAlg::Matrix>, LinAlg::IsExpr<LinAlg::Vector>, mpl_::bool_<false>, mpl_::bool_<false>, mpl_::bool_<false> >, boost::mpl::not_<boost::mpl::or_<boost::proto::is_extension<LinAlg::Matrix&>, boost::proto::is_extension<LinAlg::Vector&>, mpl_::bool_<false>, mpl_::bool_<false>, mpl_::bool_<false> > >, mpl_::bool_<true>, mpl_::bool_<true>, mpl_::bool_<true> >, boost::proto::tagns_::tag::multiplies, LinAlg::Matrix&, LinAlg::Vector&>'
adaptingMyMatrixAndVectorClassesToProto.cpp:188:2:   required by substitution of 'template<class Left, class Right> const typename boost::proto::detail::enable_binary<LinAlg::Domain, LinAlg::VecExprGrammar, boost::mpl::and_<boost::mpl::or_<LinAlg::IsExpr<typename boost::proto::detail::uncvref<T>::type>, LinAlg::IsExpr<typename boost::proto::detail::uncvref<Arg0>::type> >, boost::mpl::not_<boost::mpl::or_<boost::proto::is_extension<Arg>, boost::proto::is_extension<Right> > > >, boost::proto::tagns_::tag::multiplies, const Left&, const Right&>::type LinAlg::operator*(Left&&, Right&&) [with Left = LinAlg::Matrix&; Right = LinAlg::Vector&]'
adaptingMyMatrixAndVectorClassesToProto.cpp:213:34:   required from here
/home/mito/usrLocal/include/boost/proto/detail/preprocessed/or_n.hpp:9:12: error: 'value' is not a member of 'boost::proto::detail::matches_<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::multiplies, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<LinAlg::Matrix&>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<LinAlg::Vector&>, 0l> >, 2l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::multiplies, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<LinAlg::Matrix&>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<LinAlg::Vector&>, 0l> >, 2l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::multiplies, boost::proto::argsns_::list2<LinAlg::Matrix, LinAlg::Vector>, 2l> >'
     struct or_2
            ^
In file included from /home/mito/usrLocal/include/boost/mpl/or.hpp:23:0,
                 from /home/mito/usrLocal/include/boost/utility/result_of.hpp:26,
                 from /home/mito/usrLocal/include/boost/proto/proto_fwd.hpp:28,
                 from /home/mito/usrLocal/include/boost/proto/core.hpp:13,
                 from /home/mito/usrLocal/include/boost/proto/proto.hpp:12,
                 from adaptingMyMatrixAndVectorClassesToProto.cpp:9:
/home/mito/usrLocal/include/boost/mpl/aux_/nested_type_wknd.hpp: In instantiation of 'struct boost::mpl::aux::nested_type_wknd<boost::proto::detail::lazy_matches<boost::proto::result_of::make_expr<boost::proto::tagns_::tag::multiplies, boost::proto::domainns_::basic_default_domain, LinAlg::Matrix&, LinAlg::Vector&, void, void, void, void, void, void, void, void, void>, LinAlg::VecExprGrammar> >':
/home/mito/usrLocal/include/boost/mpl/aux_/preprocessed/gcc/and.hpp:23:8:   required from 'struct boost::mpl::aux::and_impl<true, boost::proto::detail::lazy_matches<boost::proto::result_of::make_expr<boost::proto::tagns_::tag::multiplies, boost::proto::domainns_::basic_default_domain, LinAlg::Matrix&, LinAlg::Vector&, void, void, void, void, void, void, void, void, void>, LinAlg::VecExprGrammar>, mpl_::bool_<true>, mpl_::bool_<true>, mpl_::bool_<true> >'
/home/mito/usrLocal/include/boost/mpl/aux_/preprocessed/gcc/and.hpp:48:8:   required from 'struct boost::mpl::and_<boost::mpl::and_<boost::mpl::or_<LinAlg::IsExpr<LinAlg::Matrix>, LinAlg::IsExpr<LinAlg::Vector>, mpl_::bool_<false>, mpl_::bool_<false>, mpl_::bool_<false> >, boost::mpl::not_<boost::mpl::or_<boost::proto::is_extension<LinAlg::Matrix&>, boost::proto::is_extension<LinAlg::Vector&>, mpl_::bool_<false>, mpl_::bool_<false>, mpl_::bool_<false> > >, mpl_::bool_<true>, mpl_::bool_<true>, mpl_::bool_<true> >, boost::proto::detail::lazy_matches<boost::proto::result_of::make_expr<boost::proto::tagns_::tag::multiplies, boost::proto::domainns_::basic_default_domain, LinAlg::Matrix&, LinAlg::Vector&, void, void, void, void, void, void, void, void, void>, LinAlg::VecExprGrammar>, mpl_::bool_<true>, mpl_::bool_<true>, mpl_::bool_<true> >'
/home/mito/usrLocal/include/boost/proto/operators.hpp:69:16:   required from 'struct boost::proto::detail::enable_binary<LinAlg::Domain, LinAlg::VecExprGrammar, boost::mpl::and_<boost::mpl::or_<LinAlg::IsExpr<LinAlg::Matrix>, LinAlg::IsExpr<LinAlg::Vector>, mpl_::bool_<false>, mpl_::bool_<false>, mpl_::bool_<false> >, boost::mpl::not_<boost::mpl::or_<boost::proto::is_extension<LinAlg::Matrix&>, boost::proto::is_extension<LinAlg::Vector&>, mpl_::bool_<false>, mpl_::bool_<false>, mpl_::bool_<false> > >, mpl_::bool_<true>, mpl_::bool_<true>, mpl_::bool_<true> >, boost::proto::tagns_::tag::multiplies, LinAlg::Matrix&, LinAlg::Vector&>'
adaptingMyMatrixAndVectorClassesToProto.cpp:188:2:   required by substitution of 'template<class Left, class Right> const typename boost::proto::detail::enable_binary<LinAlg::Domain, LinAlg::VecExprGrammar, boost::mpl::and_<boost::mpl::or_<LinAlg::IsExpr<typename boost::proto::detail::uncvref<T>::type>, LinAlg::IsExpr<typename boost::proto::detail::uncvref<Arg0>::type> >, boost::mpl::not_<boost::mpl::or_<boost::proto::is_extension<Arg>, boost::proto::is_extension<Right> > > >, boost::proto::tagns_::tag::multiplies, const Left&, const Right&>::type LinAlg::operator*(Left&&, Right&&) [with Left = LinAlg::Matrix&; Right = LinAlg::Vector&]'
adaptingMyMatrixAndVectorClassesToProto.cpp:213:34:   required from here
/home/mito/usrLocal/include/boost/mpl/aux_/nested_type_wknd.hpp:26:31: error: no type named 'type' in 'struct boost::proto::detail::lazy_matches<boost::proto::result_of::make_expr<boost::proto::tagns_::tag::multiplies, boost::proto::domainns_::basic_default_domain, LinAlg::Matrix&, LinAlg::Vector&, void, void, void, void, void, void, void, void, void>, LinAlg::VecExprGrammar>'
 template< typename T > struct nested_type_wknd
                               ^
In file included from /home/mito/usrLocal/include/boost/mpl/aux_/include_preprocessed.hpp:37:0,
                 from /home/mito/usrLocal/include/boost/mpl/and.hpp:42,
                 from /home/mito/usrLocal/include/boost/mpl/is_sequence.hpp:18,
                 from /home/mito/usrLocal/include/boost/fusion/support/detail/is_mpl_sequence.hpp:13,
                 from /home/mito/usrLocal/include/boost/fusion/support/tag_of.hpp:14,
                 from /home/mito/usrLocal/include/boost/fusion/support/is_view.hpp:13,
                 from /home/mito/usrLocal/include/boost/fusion/include/is_view.hpp:11,
                 from /home/mito/usrLocal/include/boost/proto/fusion.hpp:18,
                 from /home/mito/usrLocal/include/boost/proto/core.hpp:21,
                 from /home/mito/usrLocal/include/boost/proto/proto.hpp:12,
                 from adaptingMyMatrixAndVectorClassesToProto.cpp:9:
/home/mito/usrLocal/include/boost/mpl/aux_/preprocessed/gcc/and.hpp: In instantiation of 'struct boost::mpl::aux::and_impl<true, boost::proto::detail::lazy_matches<boost::proto::result_of::make_expr<boost::proto::tagns_::tag::multiplies, boost::proto::domainns_::basic_default_domain, LinAlg::Matrix&, LinAlg::Vector&, void, void, void, void, void, void, void, void, void>, LinAlg::VecExprGrammar>, mpl_::bool_<true>, mpl_::bool_<true>, mpl_::bool_<true> >':
/home/mito/usrLocal/include/boost/mpl/aux_/preprocessed/gcc/and.hpp:48:8:   required from 'struct boost::mpl::and_<boost::mpl::and_<boost::mpl::or_<LinAlg::IsExpr<LinAlg::Matrix>, LinAlg::IsExpr<LinAlg::Vector>, mpl_::bool_<false>, mpl_::bool_<false>, mpl_::bool_<false> >, boost::mpl::not_<boost::mpl::or_<boost::proto::is_extension<LinAlg::Matrix&>, boost::proto::is_extension<LinAlg::Vector&>, mpl_::bool_<false>, mpl_::bool_<false>, mpl_::bool_<false> > >, mpl_::bool_<true>, mpl_::bool_<true>, mpl_::bool_<true> >, boost::proto::detail::lazy_matches<boost::proto::result_of::make_expr<boost::proto::tagns_::tag::multiplies, boost::proto::domainns_::basic_default_domain, LinAlg::Matrix&, LinAlg::Vector&, void, void, void, void, void, void, void, void, void>, LinAlg::VecExprGrammar>, mpl_::bool_<true>, mpl_::bool_<true>, mpl_::bool_<true> >'
/home/mito/usrLocal/include/boost/proto/operators.hpp:69:16:   required from 'struct boost::proto::detail::enable_binary<LinAlg::Domain, LinAlg::VecExprGrammar, boost::mpl::and_<boost::mpl::or_<LinAlg::IsExpr<LinAlg::Matrix>, LinAlg::IsExpr<LinAlg::Vector>, mpl_::bool_<false>, mpl_::bool_<false>, mpl_::bool_<false> >, boost::mpl::not_<boost::mpl::or_<boost::proto::is_extension<LinAlg::Matrix&>, boost::proto::is_extension<LinAlg::Vector&>, mpl_::bool_<false>, mpl_::bool_<false>, mpl_::bool_<false> > >, mpl_::bool_<true>, mpl_::bool_<true>, mpl_::bool_<true> >, boost::proto::tagns_::tag::multiplies, LinAlg::Matrix&, LinAlg::Vector&>'
adaptingMyMatrixAndVectorClassesToProto.cpp:188:2:   required by substitution of 'template<class Left, class Right> const typename boost::proto::detail::enable_binary<LinAlg::Domain, LinAlg::VecExprGrammar, boost::mpl::and_<boost::mpl::or_<LinAlg::IsExpr<typename boost::proto::detail::uncvref<T>::type>, LinAlg::IsExpr<typename boost::proto::detail::uncvref<Arg0>::type> >, boost::mpl::not_<boost::mpl::or_<boost::proto::is_extension<Arg>, boost::proto::is_extension<Right> > > >, boost::proto::tagns_::tag::multiplies, const Left&, const Right&>::type LinAlg::operator*(Left&&, Right&&) [with Left = LinAlg::Matrix&; Right = LinAlg::Vector&]'
adaptingMyMatrixAndVectorClassesToProto.cpp:213:34:   required from here
/home/mito/usrLocal/include/boost/mpl/aux_/preprocessed/gcc/and.hpp:23:8: error: 'value' is not a member of 'boost::mpl::aux::nested_type_wknd<boost::proto::detail::lazy_matches<boost::proto::result_of::make_expr<boost::proto::tagns_::tag::multiplies, boost::proto::domainns_::basic_default_domain, LinAlg::Matrix&, LinAlg::Vector&, void, void, void, void, void, void, void, void, void>, LinAlg::VecExprGrammar> >'
 struct and_impl< true,T1,T2,T3,T4 >
        ^
In file included from /home/mito/usrLocal/include/boost/proto/core.hpp:26:0,
                 from /home/mito/usrLocal/include/boost/proto/proto.hpp:12,
                 from adaptingMyMatrixAndVectorClassesToProto.cpp:9:
/home/mito/usrLocal/include/boost/proto/operators.hpp: In instantiation of 'struct boost::proto::detail::enable_binary<LinAlg::Domain, LinAlg::VecExprGrammar, boost::mpl::and_<boost::mpl::or_<LinAlg::IsExpr<LinAlg::Matrix>, LinAlg::IsExpr<LinAlg::Vector>, mpl_::bool_<false>, mpl_::bool_<false>, mpl_::bool_<false> >, boost::mpl::not_<boost::mpl::or_<boost::proto::is_extension<LinAlg::Matrix&>, boost::proto::is_extension<LinAlg::Vector&>, mpl_::bool_<false>, mpl_::bool_<false>, mpl_::bool_<false> > >, mpl_::bool_<true>, mpl_::bool_<true>, mpl_::bool_<true> >, boost::proto::tagns_::tag::multiplies, LinAlg::Matrix&, LinAlg::Vector&>':
adaptingMyMatrixAndVectorClassesToProto.cpp:188:2:   required by substitution of 'template<class Left, class Right> const typename boost::proto::detail::enable_binary<LinAlg::Domain, LinAlg::VecExprGrammar, boost::mpl::and_<boost::mpl::or_<LinAlg::IsExpr<typename boost::proto::detail::uncvref<T>::type>, LinAlg::IsExpr<typename boost::proto::detail::uncvref<Arg0>::type> >, boost::mpl::not_<boost::mpl::or_<boost::proto::is_extension<Arg>, boost::proto::is_extension<Right> > > >, boost::proto::tagns_::tag::multiplies, const Left&, const Right&>::type LinAlg::operator*(Left&&, Right&&) [with Left = LinAlg::Matrix&; Right = LinAlg::Vector&]'
adaptingMyMatrixAndVectorClassesToProto.cpp:213:34:   required from here
/home/mito/usrLocal/include/boost/proto/operators.hpp:69:16: error: 'value' is not a member of 'boost::mpl::and_<boost::mpl::and_<boost::mpl::or_<LinAlg::IsExpr<LinAlg::Matrix>, LinAlg::IsExpr<LinAlg::Vector>, mpl_::bool_<false>, mpl_::bool_<false>, mpl_::bool_<false> >, boost::mpl::not_<boost::mpl::or_<boost::proto::is_extension<LinAlg::Matrix&>, boost::proto::is_extension<LinAlg::Vector&>, mpl_::bool_<false>, mpl_::bool_<false>, mpl_::bool_<false> > >, mpl_::bool_<true>, mpl_::bool_<true>, mpl_::bool_<true> >, boost::proto::detail::lazy_matches<boost::proto::result_of::make_expr<boost::proto::tagns_::tag::multiplies, boost::proto::domainns_::basic_default_domain, LinAlg::Matrix&, LinAlg::Vector&, void, void, void, void, void, void, void, void, void>, LinAlg::VecExprGrammar>, mpl_::bool_<true>, mpl_::bool_<true>, mpl_::bool_<true> >'
         struct enable_binary
                ^
adaptingMyMatrixAndVectorClassesToProto.cpp: In function 'int main()':
adaptingMyMatrixAndVectorClassesToProto.cpp:213:32: error: no match for 'operator*' (operand types are 'LinAlg::Matrix' and 'LinAlg::Vector')
     proto::display_expr( ( mat * vec1)(2) );
                                ^
adaptingMyMatrixAndVectorClassesToProto.cpp:213:32: note: candidates are:
In file included from /home/mito/usrLocal/include/boost/proto/core.hpp:26:0,
                 from /home/mito/usrLocal/include/boost/proto/proto.hpp:12,
                 from adaptingMyMatrixAndVectorClassesToProto.cpp:9:
adaptingMyMatrixAndVectorClassesToProto.cpp:188:2: note: template<class Arg> const typename boost::proto::detail::enable_unary<LinAlg::Domain, LinAlg::VecExprGrammar, boost::mpl::and_<LinAlg::IsExpr<typename boost::proto::detail::uncvref<T>::type>, boost::mpl::not_<boost::proto::is_extension<Arg> > >, boost::proto::tagns_::tag::dereference, const Arg&>::type LinAlg::operator*(Arg&&)
  BOOST_PROTO_DEFINE_OPERATORS(IsExpr, Domain)
  ^
adaptingMyMatrixAndVectorClassesToProto.cpp:188:2: note:   template argument deduction/substitution failed:
adaptingMyMatrixAndVectorClassesToProto.cpp:213:34: note:   candidate expects 1 argument, 2 provided
     proto::display_expr( ( mat * vec1)(2) );
                                  ^
In file included from /home/mito/usrLocal/include/boost/proto/core.hpp:26:0,
                 from /home/mito/usrLocal/include/boost/proto/proto.hpp:12,
                 from adaptingMyMatrixAndVectorClassesToProto.cpp:9:
adaptingMyMatrixAndVectorClassesToProto.cpp:188:2: note: template<class Left, class Right> const typename boost::proto::detail::enable_binary<LinAlg::Domain, LinAlg::VecExprGrammar, boost::mpl::and_<boost::mpl::or_<LinAlg::IsExpr<typename boost::proto::detail::uncvref<T>::type>, LinAlg::IsExpr<typename boost::proto::detail::uncvref<Arg0>::type> >, boost::mpl::not_<boost::mpl::or_<boost::proto::is_extension<Arg>, boost::proto::is_extension<Right> > > >, boost::proto::tagns_::tag::multiplies, const Left&, const Right&>::type LinAlg::operator*(Left&&, Right&&)
  BOOST_PROTO_DEFINE_OPERATORS(IsExpr, Domain)
  ^
adaptingMyMatrixAndVectorClassesToProto.cpp:188:2: note:   substitution of deduced template arguments resulted in errors seen above
adaptingMyMatrixAndVectorClassesToProto.cpp:214:50: error: no match for 'operator*' (operand types are 'LinAlg::Matrix' and 'LinAlg::Vector')
     proto::display_expr( VecExprGrammar()( ( mat * vec1)(2) );
                                                  ^
adaptingMyMatrixAndVectorClassesToProto.cpp:214:50: note: candidates are:
In file included from /home/mito/usrLocal/include/boost/proto/core.hpp:26:0,
                 from /home/mito/usrLocal/include/boost/proto/proto.hpp:12,
                 from adaptingMyMatrixAndVectorClassesToProto.cpp:9:
adaptingMyMatrixAndVectorClassesToProto.cpp:188:2: note: template<class Arg> const typename boost::proto::detail::enable_unary<LinAlg::Domain, LinAlg::VecExprGrammar, boost::mpl::and_<LinAlg::IsExpr<typename boost::proto::detail::uncvref<T>::type>, boost::mpl::not_<boost::proto::is_extension<Arg> > >, boost::proto::tagns_::tag::dereference, const Arg&>::type LinAlg::operator*(Arg&&)
  BOOST_PROTO_DEFINE_OPERATORS(IsExpr, Domain)
  ^
adaptingMyMatrixAndVectorClassesToProto.cpp:188:2: note:   template argument deduction/substitution failed:
adaptingMyMatrixAndVectorClassesToProto.cpp:214:52: note:   candidate expects 1 argument, 2 provided
     proto::display_expr( VecExprGrammar()( ( mat * vec1)(2) );
                                                    ^
In file included from /home/mito/usrLocal/include/boost/proto/core.hpp:26:0,
                 from /home/mito/usrLocal/include/boost/proto/proto.hpp:12,
                 from adaptingMyMatrixAndVectorClassesToProto.cpp:9:
adaptingMyMatrixAndVectorClassesToProto.cpp:188:2: note: template<class Left, class Right> const typename boost::proto::detail::enable_binary<LinAlg::Domain, LinAlg::VecExprGrammar, boost::mpl::and_<boost::mpl::or_<LinAlg::IsExpr<typename boost::proto::detail::uncvref<T>::type>, LinAlg::IsExpr<typename boost::proto::detail::uncvref<Arg0>::type> >, boost::mpl::not_<boost::mpl::or_<boost::proto::is_extension<Arg>, boost::proto::is_extension<Right> > > >, boost::proto::tagns_::tag::multiplies, const Left&, const Right&>::type LinAlg::operator*(Left&&, Right&&)
  BOOST_PROTO_DEFINE_OPERATORS(IsExpr, Domain)
  ^
adaptingMyMatrixAndVectorClassesToProto.cpp:188:2: note:   template argument deduction/substitution failed:
adaptingMyMatrixAndVectorClassesToProto.cpp: In substitution of 'template<class Left, class Right> const typename boost::proto::detail::enable_binary<LinAlg::Domain, LinAlg::VecExprGrammar, boost::mpl::and_<boost::mpl::or_<LinAlg::IsExpr<typename boost::proto::detail::uncvref<T>::type>, LinAlg::IsExpr<typename boost::proto::detail::uncvref<Arg0>::type> >, boost::mpl::not_<boost::mpl::or_<boost::proto::is_extension<Arg>, boost::proto::is_extension<Right> > > >, boost::proto::tagns_::tag::multiplies, const Left&, const Right&>::type LinAlg::operator*(Left&&, Right&&) [with Left = LinAlg::Matrix&; Right = LinAlg::Vector&]':
adaptingMyMatrixAndVectorClassesToProto.cpp:214:52:   required from here
adaptingMyMatrixAndVectorClassesToProto.cpp:188:2: error: no type named 'type' in 'struct boost::proto::detail::enable_binary<LinAlg::Domain, LinAlg::VecExprGrammar, boost::mpl::and_<boost::mpl::or_<LinAlg::IsExpr<LinAlg::Matrix>, LinAlg::IsExpr<LinAlg::Vector>, mpl_::bool_<false>, mpl_::bool_<false>, mpl_::bool_<false> >, boost::mpl::not_<boost::mpl::or_<boost::proto::is_extension<LinAlg::Matrix&>, boost::proto::is_extension<LinAlg::Vector&>, mpl_::bool_<false>, mpl_::bool_<false>, mpl_::bool_<false> > >, mpl_::bool_<true>, mpl_::bool_<true>, mpl_::bool_<true> >, boost::proto::tagns_::tag::multiplies, LinAlg::Matrix&, LinAlg::Vector&>'
make: *** [adaptingMyMatrixAndVectorClassesToProto] Error 1
